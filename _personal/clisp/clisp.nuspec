<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>clisp</id>
    <version>2.49</version>
    <packageSourceUrl>https://github.com/brunoyb/chocolatey-packages/tree/master/_personal/clisp</packageSourceUrl>
    <owners>Bruno Baldochi</owners>
    <title>CLISP</title>
    <authors>Bruno Haible, Michael Stoll, Sam Steingold</authors>
    <projectUrl>http://clisp.org/</projectUrl>
    <iconUrl>https://cdn.jsdelivr.net/gh/brunoyb/chocolatey-packages@8a54ae7d3c3c6f99cc2df38499968b5830a29353/_personal/clisp/icon.png</iconUrl>
    <copyright>1992-2017 Bruno Haible, Michael Stoll, Sam Steingold</copyright>
    <licenseUrl>https://sourceforge.net/p/clisp/clisp/ci/default/tree/GNU-GPL</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://sourceforge.net/p/clisp/clisp/</projectSourceUrl>
    <docsUrl>http://clisp.org/resources.html</docsUrl>
    <mailingListUrl>https://sourceforge.net/p/clisp/mailman/</mailingListUrl>
    <bugTrackerUrl>https://sourceforge.net/p/clisp/bugs/</bugTrackerUrl>
    <tags>clisp lisp functional programming language admin</tags>
    <summary>An ANSI Common Lisp implementation</summary>
    <description><![CDATA[
This is GNU CLISP, an ANSI Common Lisp implementation.

#### Common Lisp is

* a general-purpose programming language and an AI language
* interactive
* a Lisp for professional use

#### Common Lisp programs are

* easy to test (interactive)
* easy to maintain (depending on programming style)
* portable across hardware/OS platforms and implementations (there is a standard for the language and the library functions)

#### Our Common Lisp CLISP

* needs only 4 MB of memory
* implements most of the ANSI standard (including CLOS), as well as many extensions (including MOP)
* can call your preferred editor
* is freely redistributable

#### Common Lisp provides

* clear syntax, carefully designed semantics
* several data types: numbers, strings, arrays, lists, characters, symbols, structures, streams etc.
* runtime typing: the programmer need not bother about type declarations, but he gets notified on type violations.
* many generic functions: 88 arithmetic functions for all kinds of numbers (integers, ratios, floating point numbers, complex numbers), 44 search/filter/sort functions for lists, arrays and strings automatic memory management (garbage collection)
* packaging of programs into modules
* an object system, generic functions with powerful method combination
* macros: every programmer can make his own language extensions

#### Our Common Lisp CLISP provides

* an interpreter
* a compiler which makes execution of programs 5 times faster
* all data types with unlimited size (the size need never be declared, the size of lists and arrays may be changed dynamically)
* integers of arbitrary length, unlimited floating point number precision
* 800+ library functions and macros, 600+ of them written in C

CLISP compares well with other ANSI CL implementations wrt performance in most areas, such as CLOS, I/O, lists, integer arithmetics (CLISP's bignum performance is better than that of some other CL implementations). The worst performance CLISP exhibits in the area of floating point arithmetics. While showing nothing spectacularly bad and easily outperforming Java, Perl, TCL and any Scheme interpreter, CLISP is slower than another open-source CL implementation, CMU CL (http://www.cons.org/cmucl), which outperforms C and FORTRAN. If your code is heavily numeric, you might prefer CMUCL, otherwise CLISP is a wise choice.
]]></description>
    <releaseNotes>https://sourceforge.net/p/clisp/clisp/ci/clisp_2_49-2010-07-07/tree/src/NEWS</releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
